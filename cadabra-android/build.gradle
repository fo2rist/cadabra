apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "com.vanniktech.maven.publish"

android {
    compileSdkVersion target_sdk
    buildToolsVersion = build_tools_version

    defaultConfig {
        minSdkVersion min_sdk
        targetSdkVersion target_sdk

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                useJUnitPlatform()
                testLogging {
                    events 'PASSED', 'FAILED', 'SKIPPED'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(path: ':cadabra-core')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'

    // Kotest
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation 'io.kotest:kotest-runner-junit5:4.3.2'

    // JUnit5 (Required for kotlintest and spek)
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    // Robolectric
    testImplementation 'org.robolectric:robolectric:4.4'
    testImplementation 'junit:junit:4.13'
    // vintage engine is required for Robolectic tests which uses JUnit4
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.0'

    // Mockito
    testImplementation 'org.mockito:mockito-core:3.7.7'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
}
